[
  {
    "question": "Como você explicaria o conceito de API para alguém que não é da área?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Qual é a diferença entre HTML e CSS?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é Git e para que serve?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Explique o que é uma variável em programação.",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Como você descreveria a diferença entre HTTP e HTTPS?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é DevOps e como ele se relaciona com o desenvolvimento de software?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Explique o conceito de 'escopo' em programação.",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Qual é a diferença entre 'let', 'const' e 'var' em JavaScript?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Como o DNS (Sistema de Nomes de Domínio) funciona?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é a metodologia ágil e por que é usada no desenvolvimento de software?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é Docker e como ele é usado no desenvolvimento de software?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Como você faria a manipulação de eventos em JavaScript?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Explique o conceito de 'hoisting' em JavaScript.",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é o modelo OSI (Open Systems Interconnection)?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Como funciona o versionamento semântico (Semantic Versioning)?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é um framework de desenvolvimento e dê exemplos.",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Como o conceito de herança funciona em programação orientada a objetos?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Explique o que é uma chave primária em um banco de dados.",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que é a metodologia Scrum e como ela é utilizada no desenvolvimento ágil?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "Qual é a diferença entre uma linguagem de programação compilada e interpretada?",
    "difficulty": "estagiário",
    "points": 10
  },
  {
    "question": "O que são os princípios SOLID na programação orientada a objetos?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Explique o que é um banco de dados relacional.",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Como funciona o modelo de caixa de CSS?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "O que é um framework em desenvolvimento web e dê um exemplo.",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Qual é a diferença entre pilha (stack) e fila (queue) em estruturas de dados?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Como você lidaria com um conflito de merge no Git?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Explique o que é um padrão de projeto Singleton.",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "O que são cookies e como eles funcionam na web?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Qual é a diferença entre uma chave primária e uma chave estrangeira em um banco de dados relacional?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Como você otimizaria um site para melhorar o tempo de carregamento?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Descreva o padrão de design MVC (Model-View-Controller).",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "O que é RESTful e por que é importante em APIs web?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Explique o que é um ataque de SQL Injection.",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Como otimizar o desempenho de uma consulta SQL?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "O que é o conceito de programação assíncrona?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "O que é o padrão de design Builder e em que situações ele é útil?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Como funciona o algoritmo de pesquisa binária?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Explique o conceito de 'closure' em linguagens de programação.",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "O que é Cross-Site Scripting (XSS) e como evitá-lo?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Como você implementaria cache em uma aplicação web?",
    "difficulty": "júnior",
    "points": 20
  },
  {
    "question": "Descreva o funcionamento do algoritmo de roteamento Dijkstra.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "O que é o modelo de maturidade CMMI (Capability Maturity Model Integration)?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como o protocolo OAuth 2.0 é usado em autenticação e autorização?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Explique a diferença entre programação síncrona e assíncrona.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Qual é a importância da normalização em bancos de dados relacionais?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Descreva o funcionamento do algoritmo de ordenação MergeSort.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "O que é a arquitetura de microsserviços e quais são suas vantagens e desvantagens?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como você projetaria um sistema distribuído altamente disponível?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Explique a arquitetura de microsserviços em detalhes.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como a criptografia de chave pública e privada funciona?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Descreva o padrão de design Adapter.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como você lidaria com a prevenção de vazamento de dados em uma aplicação?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "O que são WebSockets e em que cenários eles são úteis?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Explique o modelo de consistência eventual no contexto de bancos de dados distribuídos.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como você otimizaria o desempenho de uma consulta SQL complexa?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Descreva o conceito de escalabilidade horizontal e vertical.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "O que é o padrão de design Composite e quando ele é aplicado?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como o algoritmo de aprendizado de máquina K-Means funciona?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "O que é o protocolo gRPC e como ele se compara ao REST?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Explique a diferença entre autenticação JWT e cookies.",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como você implementaria a compressão de dados em uma aplicação?",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Descreva o conceito de integração contínua e entrega contínua (CI/CD).",
    "difficulty": "pleno",
    "points": 30
  },
  {
    "question": "Como o padrão de design Observer funciona?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "O que são arquiteturas de microsserviços e quais são suas vantagens e desvantagens?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Explique a diferença entre autenticação e autorização.",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Descreva o que é o algoritmo de ordenação QuickSort.",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como você lidaria com um ataque de negação de serviço (DDoS) em um sistema online?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como você projetaria um banco de dados NoSQL escalável?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Descreva o conceito de polimorfismo em programação orientada a objetos.",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "O que é um ataque de força bruta e como evitá-lo?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como você implementaria controle de concorrência em um sistema distribuído?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Explique a diferença entre autenticação baseada em token e autenticação baseada em sessão.",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como mitigar ataques de injeção de código no lado do cliente?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como o algoritmo de aprendizado de máquina Naive Bayes funciona?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "O que é a arquitetura de eventos CQRS (Command Query Responsibility Segregation)?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Explique a diferença entre autenticação e autorização no contexto de APIs.",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como você implementaria um sistema de reconhecimento de padrões?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "O que é uma arquitetura orientada a eventos e como ela funciona?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "Como você projetaria uma API RESTful escalável?",
    "difficulty": "sênior",
    "points": 50
  },
  {
    "question": "O que é uma arquitetura orientada a eventos e como ela funciona?",
    "difficulty": "sênior",
    "points": 50
  }
]
